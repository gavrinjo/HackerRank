"""
TODO: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
even-valued terms.
"""
"""
my first solution!!!
n = int(4000000)
l = [1, 2]
i = 2
while i:
    if (l[i - 1] + l[i - 2]) >= n:
        break
    else:
        l.append(l[i - 1] + l[i - 2])
        i += 1
k = 0
for j in l:
    if j % 2 == 0:
        k += j

print(k)
"""


def calculate():
    res = 0
    a = 1
    b = 2
    while a <= 10:
        if a % 2 == 0:
            res += a
        a, b = b, a + b

    return res


if __name__ == "__main__":
    print(calculate())
